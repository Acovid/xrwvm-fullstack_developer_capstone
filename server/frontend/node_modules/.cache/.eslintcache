[{"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/index.js":"1","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/App.js":"2","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Login/Login.jsx":"3","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Dealers/Dealers.jsx":"4","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Register/Register.jsx":"5","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Header/Header.jsx":"6","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Dealers/Dealer.jsx":"7","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Dealers/PostReview.jsx":"8"},{"size":282,"mtime":1745245667961,"results":"9","hashOfConfig":"10"},{"size":683,"mtime":1745246419108,"results":"11","hashOfConfig":"10"},{"size":2129,"mtime":1745245667949,"results":"12","hashOfConfig":"10"},{"size":2575,"mtime":1745245667949,"results":"13","hashOfConfig":"10"},{"size":3594,"mtime":1745245667949,"results":"14","hashOfConfig":"10"},{"size":2725,"mtime":1745245667949,"results":"15","hashOfConfig":"10"},{"size":2856,"mtime":1745245667949,"results":"16","hashOfConfig":"10"},{"size":3615,"mtime":1745245667949,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3l6ifr",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/index.js",[],[],"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/App.js",[],[],"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Login/Login.jsx",[],[],"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Dealers/Dealers.jsx",["44"],[],"import React, { useState, useEffect } from 'react';\nimport \"./Dealers.css\";\nimport \"../assets/style.css\";\nimport Header from '../Header/Header';\nimport review_icon from \"../assets/reviewicon.png\"\n\nconst Dealers = () => {\n  const [dealersList, setDealersList] = useState([]);\n  // let [state, setState] = useState(\"\")\n  let [states, setStates] = useState([])\n\n  // let root_url = window.location.origin\n  let dealer_url =\"/djangoapp/get_dealers\";\n  \n  let dealer_url_by_state = \"/djangoapp/get_dealers/\";\n \n  const filterDealers = async (state) => {\n    dealer_url_by_state = dealer_url_by_state+state;\n    const res = await fetch(dealer_url_by_state, {\n      method: \"GET\"\n    });\n    const retobj = await res.json();\n    if(retobj.status === 200) {\n      let state_dealers = Array.from(retobj.dealers)\n      setDealersList(state_dealers)\n    }\n  }\n\n  const get_dealers = async ()=>{\n    const res = await fetch(dealer_url, {\n      method: \"GET\"\n    });\n    const retobj = await res.json();\n    if(retobj.status === 200) {\n      let all_dealers = Array.from(retobj.dealers)\n      let states = [];\n      all_dealers.forEach((dealer)=>{\n        states.push(dealer.state)\n      });\n\n      setStates(Array.from(new Set(states)))\n      setDealersList(all_dealers)\n    }\n  }\n  useEffect(() => {\n    get_dealers();\n  },[]);  \n\n\nlet isLoggedIn = sessionStorage.getItem(\"username\") != null ? true : false;\nreturn(\n  <div>\n      <Header/>\n\n     <table className='table'>\n      <tr>\n      <th>ID</th>\n      <th>Dealer Name</th>\n      <th>City</th>\n      <th>Address</th>\n      <th>Zip</th>\n      <th>\n      <select name=\"state\" id=\"state\" onChange={(e) => filterDealers(e.target.value)}>\n      <option value=\"\" selected disabled hidden>State</option>\n      <option value=\"All\">All States</option>\n      {states.map(state => (\n          <option value={state}>{state}</option>\n      ))}\n      </select>        \n\n      </th>\n      {isLoggedIn ? (\n          <th>Review Dealer</th>\n         ):<></>\n      }\n      </tr>\n     {dealersList.map(dealer => (\n        <tr>\n          <td>{dealer['id']}</td>\n          <td><a href={'/dealer/'+dealer['id']}>{dealer['full_name']}</a></td>\n          <td>{dealer['city']}</td>\n          <td>{dealer['address']}</td>\n          <td>{dealer['zip']}</td>\n          <td>{dealer['state']}</td>\n          {isLoggedIn ? (\n            <td><a href={`/postreview/${dealer['id']}`}><img src={review_icon} className=\"review_icon\" alt=\"Post Review\"/></a></td>\n           ):<></>\n          }\n        </tr>\n      ))}\n     </table>;\n  </div>\n)\n}\n\nexport default Dealers\n","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Register/Register.jsx",[],[],"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Header/Header.jsx",[],[],"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Dealers/Dealer.jsx",["45"],[],"import React, { useState,useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport \"./Dealers.css\";\nimport \"../assets/style.css\";\nimport positive_icon from \"../assets/positive.png\"\nimport neutral_icon from \"../assets/neutral.png\"\nimport negative_icon from \"../assets/negative.png\"\nimport review_icon from \"../assets/reviewbutton.png\"\nimport Header from '../Header/Header';\n\nconst Dealer = () => {\n\n\n  const [dealer, setDealer] = useState({});\n  const [reviews, setReviews] = useState([]);\n  const [unreviewed, setUnreviewed] = useState(false);\n  const [postReview, setPostReview] = useState(<></>)\n\n  let curr_url = window.location.href;\n  let root_url = curr_url.substring(0,curr_url.indexOf(\"dealer\"));\n  let params = useParams();\n  let id =params.id;\n  let dealer_url = root_url+`djangoapp/dealer/${id}`;\n  let reviews_url = root_url+`djangoapp/reviews/dealer/${id}`;\n  let post_review = root_url+`postreview/${id}`;\n  \n  const get_dealer = async ()=>{\n    const res = await fetch(dealer_url, {\n      method: \"GET\"\n    });\n    const retobj = await res.json();\n    \n    if(retobj.status === 200) {\n      let dealerobjs = Array.from(retobj.dealer)\n      setDealer(dealerobjs[0])\n    }\n  }\n\n  const get_reviews = async ()=>{\n    const res = await fetch(reviews_url, {\n      method: \"GET\"\n    });\n    const retobj = await res.json();\n    \n    if(retobj.status === 200) {\n      if(retobj.reviews.length > 0){\n        setReviews(retobj.reviews)\n      } else {\n        setUnreviewed(true);\n      }\n    }\n  }\n\n  const senti_icon = (sentiment)=>{\n    let icon = sentiment === \"positive\"?positive_icon:sentiment===\"negative\"?negative_icon:neutral_icon;\n    return icon;\n  }\n\n  useEffect(() => {\n    get_dealer();\n    get_reviews();\n    if(sessionStorage.getItem(\"username\")) {\n      setPostReview(<a href={post_review}><img src={review_icon} style={{width:'10%',marginLeft:'10px',marginTop:'10px'}} alt='Post Review'/></a>)\n\n      \n    }\n  },[]);  \n\n\nreturn(\n  <div style={{margin:\"20px\"}}>\n      <Header/>\n      <div style={{marginTop:\"10px\"}}>\n      <h1 style={{color:\"grey\"}}>{dealer.full_name}{postReview}</h1>\n      <h4  style={{color:\"grey\"}}>{dealer['city']},{dealer['address']}, Zip - {dealer['zip']}, {dealer['state']} </h4>\n      </div>\n      <div class=\"reviews_panel\">\n      {reviews.length === 0 && unreviewed === false ? (\n        <text>Loading Reviews....</text>\n      ):  unreviewed === true? <div>No reviews yet! </div> :\n      reviews.map(review => (\n        <div className='review_panel'>\n          <img src={senti_icon(review.sentiment)} className=\"emotion_icon\" alt='Sentiment'/>\n          <div className='review'>{review.review}</div>\n          <div className=\"reviewer\">{review.name} {review.car_make} {review.car_model} {review.car_year}</div>\n        </div>\n      ))}\n    </div>  \n  </div>\n)\n}\n\nexport default Dealer\n","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Dealers/PostReview.jsx",["46"],[],{"ruleId":"47","severity":1,"message":"48","line":47,"column":5,"nodeType":"49","endLine":47,"endColumn":7,"suggestions":"50"},{"ruleId":"47","severity":1,"message":"51","line":67,"column":5,"nodeType":"49","endLine":67,"endColumn":7,"suggestions":"52"},{"ruleId":"47","severity":1,"message":"53","line":90,"column":5,"nodeType":"49","endLine":90,"endColumn":7,"suggestions":"54"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get_dealers'. Either include it or remove the dependency array.","ArrayExpression",["55"],"React Hook useEffect has missing dependencies: 'get_dealer', 'get_reviews', and 'post_review'. Either include them or remove the dependency array.",["56"],"React Hook useEffect has missing dependencies: 'get_cars' and 'get_dealer'. Either include them or remove the dependency array.",["57"],{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [get_dealers]",{"range":"64","text":"65"},"Update the dependencies array to be: [get_dealer, get_reviews, post_review]",{"range":"66","text":"67"},"Update the dependencies array to be: [get_cars, get_dealer]",{"range":"68","text":"69"},[1312,1314],"[get_dealers]",[1956,1958],"[get_dealer, get_reviews, post_review]",[2521,2523],"[get_cars, get_dealer]"]