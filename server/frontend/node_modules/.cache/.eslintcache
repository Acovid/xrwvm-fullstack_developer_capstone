[{"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/index.js":"1","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/App.js":"2","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Login/Login.jsx":"3","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Register/Register.jsx":"4","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Header/Header.jsx":"5","/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Dealers/Dealers.jsx":"6"},{"size":282,"mtime":1744276436812,"results":"7","hashOfConfig":"8"},{"size":460,"mtime":1744276436804,"results":"9","hashOfConfig":"8"},{"size":2129,"mtime":1744276436804,"results":"10","hashOfConfig":"8"},{"size":3594,"mtime":1744276436804,"results":"11","hashOfConfig":"8"},{"size":2725,"mtime":1744276436804,"results":"12","hashOfConfig":"8"},{"size":2575,"mtime":1744276436804,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3l6ifr",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/index.js",[],[],"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/App.js",[],[],"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Login/Login.jsx",[],[],"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Register/Register.jsx",[],[],"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Header/Header.jsx",[],[],"/home/project/xrwvm-fullstack_developer_capstone/server/frontend/src/components/Dealers/Dealers.jsx",["33"],[],"import React, { useState, useEffect } from 'react';\nimport \"./Dealers.css\";\nimport \"../assets/style.css\";\nimport Header from '../Header/Header';\nimport review_icon from \"../assets/reviewicon.png\"\n\nconst Dealers = () => {\n  const [dealersList, setDealersList] = useState([]);\n  // let [state, setState] = useState(\"\")\n  let [states, setStates] = useState([])\n\n  // let root_url = window.location.origin\n  let dealer_url =\"/djangoapp/get_dealers\";\n  \n  let dealer_url_by_state = \"/djangoapp/get_dealers/\";\n \n  const filterDealers = async (state) => {\n    dealer_url_by_state = dealer_url_by_state+state;\n    const res = await fetch(dealer_url_by_state, {\n      method: \"GET\"\n    });\n    const retobj = await res.json();\n    if(retobj.status === 200) {\n      let state_dealers = Array.from(retobj.dealers)\n      setDealersList(state_dealers)\n    }\n  }\n\n  const get_dealers = async ()=>{\n    const res = await fetch(dealer_url, {\n      method: \"GET\"\n    });\n    const retobj = await res.json();\n    if(retobj.status === 200) {\n      let all_dealers = Array.from(retobj.dealers)\n      let states = [];\n      all_dealers.forEach((dealer)=>{\n        states.push(dealer.state)\n      });\n\n      setStates(Array.from(new Set(states)))\n      setDealersList(all_dealers)\n    }\n  }\n  useEffect(() => {\n    get_dealers();\n  },[]);  \n\n\nlet isLoggedIn = sessionStorage.getItem(\"username\") != null ? true : false;\nreturn(\n  <div>\n      <Header/>\n\n     <table className='table'>\n      <tr>\n      <th>ID</th>\n      <th>Dealer Name</th>\n      <th>City</th>\n      <th>Address</th>\n      <th>Zip</th>\n      <th>\n      <select name=\"state\" id=\"state\" onChange={(e) => filterDealers(e.target.value)}>\n      <option value=\"\" selected disabled hidden>State</option>\n      <option value=\"All\">All States</option>\n      {states.map(state => (\n          <option value={state}>{state}</option>\n      ))}\n      </select>        \n\n      </th>\n      {isLoggedIn ? (\n          <th>Review Dealer</th>\n         ):<></>\n      }\n      </tr>\n     {dealersList.map(dealer => (\n        <tr>\n          <td>{dealer['id']}</td>\n          <td><a href={'/dealer/'+dealer['id']}>{dealer['full_name']}</a></td>\n          <td>{dealer['city']}</td>\n          <td>{dealer['address']}</td>\n          <td>{dealer['zip']}</td>\n          <td>{dealer['state']}</td>\n          {isLoggedIn ? (\n            <td><a href={`/postreview/${dealer['id']}`}><img src={review_icon} className=\"review_icon\" alt=\"Post Review\"/></a></td>\n           ):<></>\n          }\n        </tr>\n      ))}\n     </table>;\n  </div>\n)\n}\n\nexport default Dealers\n",{"ruleId":"34","severity":1,"message":"35","line":47,"column":5,"nodeType":"36","endLine":47,"endColumn":7,"suggestions":"37"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get_dealers'. Either include it or remove the dependency array.","ArrayExpression",["38"],{"desc":"39","fix":"40"},"Update the dependencies array to be: [get_dealers]",{"range":"41","text":"42"},[1312,1314],"[get_dealers]"]